#basic configuration
# since we have a config server, there is no need for fixed server ports
# this also avoids port conflicts
server.port=0

#actuator management configuration
# configuring another base path (default would be /actuator) as a sample how properties influence each other
management.endpoints.web.base-path=/management
# including all possible endpoints
management.endpoints.web.exposure.include=*
# by excluding the heap dump
management.endpoints.web.exposure.exclude=heapdump
# shows all information about health of the subsystems/components of the application
management.endpoint.health.show-details=always

#basic service information, exposed at actuator endpoint /info
info.contact.name=Johannes Manner
info.contact.email=johannes.manner(at)uni-bamberg.de
info.company.name=Lion[5]
info.company.website=https://lion5.io/

#customizing eureka properties (all services, which are getting their properties here, are eureka clients)
# service registry url
eureka.client.service-url.defaultZone=http://eureka:8761/eureka
# property which is used within the eureka dashboard
eureka.instance.instance-id=${random.int(1000,10000)}:${server.port}
# used for example by the admin server to check basic information, docu says that it is a good idea to specify these properties explicitly
eureka.instance.statusPageUrlPath=${management.endpoints.web.base-path}/info
eureka.instance.healthCheckUrlPath=${management.endpoints.web.base-path}/health